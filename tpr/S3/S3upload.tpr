//made by kodama 190903
//このスクリプトは、AWS S3に接続するための動作の自動化を目的としています。
//コマンドプロンプト上でのAWS CLIの使用を前提とします。（sync命令動作監視のため）
//予め実行環境でインストール・各種設定をすること。
//また、AWS S3にアクセスするためのAccessKey等の情報についても、予め「aws configure」で
//設定されているものとします。



//コマンドプロンプトを起動
Press Windows+r wait=2s
Paste "cmd" wait=2s
Press Enter wait=2s

Compareto "S3\cmdStart" method="search2"

// S3へのファイルアップロード（Sync命令）
Paste "aws s3 sync C:\HTTrackLog\{web_site} s3://vp-web-crawl/{web_site}"
Press Enter wait=5s
Waitfor "mismatch" method="search2" template="S3\cmdSyncWait" timeout="10m"

//コマンドプロンプト終了処理
Wait "2s"
Paste "exit" wait=2s
Press Enter wait=2s


// {website}_kintone.csv（S3版）を作成
java {
    import java.io.*;

    String projectdir_tpr = getVariableAsString("_PROJECT_DIR") + "\\result\\";
    String website_tpr = getVariableAsString("web_site");
    String original_csv = projectdir_tpr + website_tpr + ".csv";
    String kintone_csv = projectdir_tpr + website_tpr + "_kintone.csv";

    try {
        BufferedReader br_original_csv=null;

        if (website_tpr.equals("doda")) {
            br_original_csv = new BufferedReader(new InputStreamReader(new FileInputStream(original_csv),"Shift-JIS"));
        } else if (website_tpr.equals("mynavi")) {
            br_original_csv = new BufferedReader(new InputStreamReader(new FileInputStream(original_csv),"UTF-8"));
        } else if (website_tpr.equals("rikunabi")) {
            br_original_csv = new BufferedReader(new InputStreamReader(new FileInputStream(original_csv),"UTF-8"));
        }

        FileWriter f;
        PrintWriter pw_kintone_csv;
        BufferedReader print_writer_csv = new BufferedReader(new FileReader(new File(original_csv)));

        String line1 = "";
        String line2 = "";
        boolean first = true;

        while ((line1 = br_original_csv.readLine()) != null) {
            String original[] = line1.split(",");
            if (first) {
                pw_kintone_csv = new PrintWriter(new BufferedWriter(new OutputStreamWriter(new FileOutputStream(kintone_csv,false),"UTF-8")));
                // オリジナルファイル({web_site}.csv)の目次を１行目に出力
                for (int i = 0; i < original.length; i++) {
                    if (i < original.length - 1) {
                        pw_kintone_csv.print(original[i]);
                        pw_kintone_csv.print(",");
                    } else {
                        pw_kintone_csv.println(original[i]);
                    }
                }
                first = false;
            } else {
                // 2行目以降は1列目でURLの置き換え、2列目以降で元々のcsvデータを出力
                pw_kintone_csv = new PrintWriter(new BufferedWriter(new OutputStreamWriter(new FileOutputStream(kintone_csv,true),"UTF-8")));
                boolean find_flg=false;
                String replace[] = line2.split(",");
                //a列目で、urlの置き換え処理
                String url_str = original[0];
                String url_str_wrk=url_str;

                //Webサイトごとの処理
                if (website_tpr.equals("doda")) {
                    url_str = url_str.replace("https://","https://vp-web-crawl.s3-ap-northeast-1.amazonaws.com/"+website_tpr+"/");
                    url_str = url_str + "index.html";

                } else if (website_tpr.equals("mynavi")) {
                    if (url_str.indexOf("/?")!=-1) {
                        url_str=url_str.substring(0,url_str.indexOf("/?")+1);
                    }
                    url_str = url_str.replace("https://","https://vp-web-crawl.s3-ap-northeast-1.amazonaws.com/"+website_tpr+"/");
                    url_str = url_str + "index.html";

                } else if (website_tpr.equals("rikunabi")) {
                    if (url_str.indexOf("cmi")!=-1) {
                        url_str_wrk=url_str.substring(url_str_wrk.indexOf("cmi"));
                    }
                    if (url_str_wrk.indexOf("/?")!=-1) {
                        url_str_wrk=url_str_wrk.substring(0,url_str_wrk.indexOf("/?"));
                    }
                    if (url_str_wrk.indexOf("/")!=-1) {
                        url_str_wrk = url_str_wrk.replace("/","_");
                    }
                    url_str = "https://vp-web-crawl.s3-ap-northeast-1.amazonaws.com/"+website_tpr+"/"+ url_str_wrk+".png";
                    if (original[13].equals("\"4\"")||original[13].equals("\"3\"")||original[13].equals("\"2\"")||original[13].equals("\"1\"")) {
                        url_str = url_str.replace("_nx2_","_nx1_");
                    }
                }

                pw_kintone_csv.print(url_str);
                pw_kintone_csv.print(",");
                for (int i = 1; i < original.length; i++) {
                    if (i < original.length - 1) {
                        pw_kintone_csv.print(original[i]);
                        pw_kintone_csv.print(",");
                    } else {
                        pw_kintone_csv.println(original[i]);
                    }
                }
            }
            getContext().setVariable("check_detail1",original[13]);
            pw_kintone_csv.close() ;
        }
    } catch (FileNotFoundException e) {
        getContext().setVariable("check_detail1","errNotFound");
    } catch (IOException e) {
        getContext().setVariable("check_detail1","errIO");
    }
} endjava

Log {check_detail1}

//法人番号の付加（HBinput.tpr）に移行
Run "..\HBinput.tpr"
