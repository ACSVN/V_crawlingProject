//190618 made by s.kodama

//dodaにアクセスし、リストページから企業詳細ページのURLを取得します。
//Access "doda", and get the URL of the company detail from list page
Var check_detail=""
Var html_get=""
Var k=0
Var i=0

java {
    import java.io.FileWriter;
    import java.io.File;
    import java.io.BufferedWriter;
    import java.io.PrintWriter;
    import java.io.IOException;

    import org.jsoup.Jsoup;
    import org.jsoup.helper.Validate;
    import org.jsoup.nodes.*;
    import org.jsoup.select.Elements;

    String dir_path = getContext().getVariableAsString("_PROJECT_DIR");

    int kcnt=1,cnt=1;
    int newFlag=0;
    boolean first = true;
    boolean endFlag = false;
    try {

        //リストページ1つを確認後、hreflist.csvに書き出しを、全てのリストページをチェック完了するまで繰り返す
        //After comfirming one list page, export "hreflist.csv" (repeat until finish checking all list page)
        for(kcnt=1;kcnt<=2&&endFlag==false;kcnt=kcnt+1){
            FileWriter f;
            if(first) {
                //最初のアクセス時、hreflist.csvを作り直す
                //At the first access, remake "hreflist.csv"
                f = new FileWriter(dir_path + "\\hreflist.csv", false);
                first = false;
            } else {
                f = new FileWriter(dir_path + "\\hreflist.csv", true);
            }
            PrintWriter p = new PrintWriter(new BufferedWriter(f));

            //アクセスするべきurlを取得する
            //Get the URL to be accessed
            String url="";

            //kcntが1のときはTopShearchに、1以外の時はページ数を指定してアクセスする
            //If "kcnt==1", access "Top Search" / If "kcnt!=1", specify the number of pages and access "TopSearch"
            if(kcnt==1) {
                if(newFlag==0){
                  //新着指定が無い場合は、全件表示のリストページを対象とする
                  //If there's no specify for "only new information", target the list page(shows "all" information)
                  url = "https://tenshoku.mynavi.jp/search/list/?jobsearchType=4&searchType=8";
                }else{
                  //新着指定がある場合は、新着のみのリストページを対象とする
                  //If there's specify for "only new imformation", target the list page(shows "only new" one)
                  //url =
                  p.println("企業詳細ページURL,取得元URL,リストページ番号,番号");
                }
            }else{
                if(newFlag==0){
                    //新着指定が無い場合は、全件表示のリストページを対象とする
                    //If there's no specify for "only new information", target the list page(shows "all" information)
                    url = "https://tenshoku.mynavi.jp/search/list/?pageNum="+kcnt;
                }else{
                    //新着指定がある場合は、新着のみのリストページを対象とする
                    //If there's specify for "only new imformation", target the list page(shows "only new" one)
                    url ="https://tenshoku.mynavi.jp/search/list/?pageNum="+kcnt;
                }
            }

            Document docHTML;
            //上記のURLにアクセスし、docHTMLにHTMLデータを取得
            //Access the URL as noted above, get HTML data for docHTML
            docHTML = Jsoup.connect(url).get();

            //クラス名が"_JobListToDetail"になっているhref（＝企業詳細ページリンク）を取得
            //Get "href"(=link for the company-detail page)
            Elements elemHTML;
            elemHTML = docHTML.select("body > div.wrapper > div > form > div > div > div > section > p > a");

            //取得したhrefデータを個別に確認して出力する
            //Comfirm "href" data(gotten in advance) individually and output it
            cnt=1;
            String sameHTML="";
            for (Element eleHTML: elemHTML) {
                if(!eleHTML.attr("href").equals(sameHTML)){
                    //p.print(eleHTML.attr("href").replace("/-tab__pr/","/-tab__jd/"));
                    p.print(",");
                    p.print(eleHTML.attr("href"));
                    p.print(",");
                    p.print(kcnt);
                    p.print(",");
                    p.print(cnt);
                    p.println();
                    sameHTML=eleHTML.attr("href");
                    cnt++;
                }
            }
             //一つもhrefが取得できていない場合、endFlagを立てる
             //If we couldn't get any "href", set "endFlag"
            if(cnt==1){
                endFlag=true;
            }
            //1行の登録が終わったら、一度csvファイルを閉じる
            //If registation of one line finished, close csv file for once
            p.close();
        }
    } catch (StopRequestException ex) {
        throw ex;
    } catch (IOException ex) {
        ex.printStackTrace();
        throw new IllegalStateException(ex);
    }
} endjava
